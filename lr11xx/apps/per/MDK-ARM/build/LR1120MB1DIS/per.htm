<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\build\LR1120MB1DIS\per.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\build\LR1120MB1DIS\per.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Mon Feb 10 14:49:16 2025
<BR><P>
<H3>Maximum Stack Usage =        416 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; apps_common_lr11xx_irq_process &rArr; on_rx_done &rArr; apps_common_lr11xx_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">NMI_Handler</a><BR>
 <LI><a href="#[1d]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">HardFault_Handler</a><BR>
 <LI><a href="#[1e]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">MemManage_Handler</a><BR>
 <LI><a href="#[1f]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">BusFault_Handler</a><BR>
 <LI><a href="#[20]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">UsageFault_Handler</a><BR>
 <LI><a href="#[21]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">SVC_Handler</a><BR>
 <LI><a href="#[22]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">DebugMon_Handler</a><BR>
 <LI><a href="#[23]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">PendSV_Handler</a><BR>
 <LI><a href="#[24]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">SysTick_Handler</a><BR>
 <LI><a href="#[37]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[37]">ADC1_2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[54]">ADC3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[16]">ATC_HP_PA_SEL_event_callback</a> from uart_init.o(i.ATC_HP_PA_SEL_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[18]">ATC_PA_RGE_SUPPLY_event_callback</a> from uart_init.o(i.ATC_PA_RGE_SUPPLY_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[17]">ATC_PA_SEL_event_callback</a> from uart_init.o(i.ATC_PA_SEL_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[d]">AT_BW_Callback</a> from uart_init.o(i.AT_BW_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[e]">AT_CR_Callback</a> from uart_init.o(i.AT_CR_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[f]">AT_CW_event_callback</a> from uart_init.o(i.AT_CW_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[8]">AT_Freq_Callback</a> from uart_init.o(i.AT_Freq_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[12]">AT_Help_Callback</a> from uart_init.o(i.AT_Help_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[10]">AT_NB_FRAME_event_callback</a> from uart_init.o(i.AT_NB_FRAME_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[19]">AT_PA_DUTY_CYCLE_event_callback</a> from uart_init.o(i.AT_PA_DUTY_CYCLE_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[1a]">AT_PA_REAL_POWER_event_callback</a> from uart_init.o(i.AT_PA_REAL_POWER_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[a]">AT_Param_Callback</a> from uart_init.o(i.AT_Param_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[9]">AT_Power_Callback</a> from uart_init.o(i.AT_Power_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[11]">AT_RX_BOOST_event_callback</a> from uart_init.o(i.AT_RX_BOOST_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[c]">AT_SF_Callback</a> from uart_init.o(i.AT_SF_Callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[14]">AT_SLEEP_event_callback</a> from uart_init.o(i.AT_SLEEP_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[15]">AT_START_event_callback</a> from uart_init.o(i.AT_START_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[b]">AT_TRSW_event_callback</a> from uart_init.o(i.AT_TRSW_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[1f]">BusFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[39]">CAN1_RX0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3a]">CAN1_RX1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3b]">CAN1_SCE_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[38]">CAN1_TX_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[65]">COMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[62]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[63]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[64]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4f]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[30]">DMA1_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[31]">DMA1_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[32]">DMA1_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[33]">DMA1_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[34]">DMA1_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[35]">DMA1_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[36]">DMA1_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5d]">DMA2_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5e]">DMA2_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5f]">DMA2_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[60]">DMA2_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[61]">DMA2_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[69]">DMA2_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6a]">DMA2_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[22]">DebugMon_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2b]">EXTI0_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI0_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4d]">EXTI15_10_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2c]">EXTI1_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2d]">EXTI2_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2e]">EXTI3_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI3_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2f]">EXTI4_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI4_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3c]">EXTI9_5_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[29]">FLASH_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[55]">FMC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[75]">FPU_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1d]">HardFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[45]">I2C1_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[44]">I2C1_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[47]">I2C2_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[46]">I2C2_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6e]">I2C3_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6d]">I2C3_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[73]">LCD_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[66]">LPTIM1_IRQHandler</a> from smtc_hal_mcu_timer_stm32l4.o(i.LPTIM1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[67]">LPTIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6b]">LPUART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1e]">MemManage_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1c]">NMI_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[68]">OTG_FS_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[26]">PVD_PVM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[23]">PendSV_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6c]">QUADSPI_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2a]">RCC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[74]">RNG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4e]">RTC_Alarm_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[28]">RTC_WKUP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1b]">Reset_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6f]">SAI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[70]">SAI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[56]">SDMMC1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[48]">SPI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[49]">SPI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[58]">SPI3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[21]">SVC_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[71]">SWPMI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[24]">SysTick_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[77]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[27]">TAMP_STAMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3d]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[40]">TIM1_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3f]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3e]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[41]">TIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[42]">TIM3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[43]">TIM4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[57]">TIM5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5b]">TIM6_DAC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5c]">TIM7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[50]">TIM8_BRK_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[53]">TIM8_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[52]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[51]">TIM8_UP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[72]">TSC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[59]">UART4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5a]">UART5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4a]">USART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4b]">USART2_IRQHandler</a> from smtc_hal_mcu_uart_stm32l4.o(i.USART2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4c]">USART3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[20]">UsageFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[25]">WWDG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[78]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[79]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[13]">atc_per_event_callback</a> from uart_init.o(i.atc_per_event_callback) referenced 2 times from uart_init.o(.data)
 <LI><a href="#[76]">main</a> from main_per.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7a]">radio_on_dio_irq</a> from apps_common.o(i.radio_on_dio_irq) referenced from apps_common.o(i.apps_common_lr11xx_get_context)
 <LI><a href="#[5]">smtc_shield_lr1120mb1dis_get_lfclk_cfg</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_lfclk_cfg) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[0]">smtc_shield_lr1120mb1dis_get_pa_pwr_cfg</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_pa_pwr_cfg) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[6]">smtc_shield_lr1120mb1dis_get_pinout</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_pinout) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[3]">smtc_shield_lr1120mb1dis_get_reg_mode</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_reg_mode) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[2]">smtc_shield_lr1120mb1dis_get_rf_switch_cfg</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_rf_switch_cfg) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[1]">smtc_shield_lr1120mb1dis_get_rssi_calibration_table</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_rssi_calibration_table) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[4]">smtc_shield_lr1120mb1dis_get_xosc_cfg</a> from smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_xosc_cfg) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[7]">smtc_shield_lr11x0_common_rttof_recommended_rx_tx_delay_indicator</a> from smtc_shield_lr11x0_common.o(i.smtc_shield_lr11x0_common_rttof_recommended_rx_tx_delay_indicator) referenced 2 times from apps_common.o(.data)
 <LI><a href="#[7b]">uart_rx_callback</a> from uart_init.o(i.uart_rx_callback) referenced from uart_init.o(i.uart_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[78]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[15c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[94]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[15d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[15e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[15f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[160]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[161]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_IdleLine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_callback
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[163]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Loop
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
</UL>

<P><STRONG><a name="[165]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[9e]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Loop
</UL>

<P><STRONG><a name="[9a]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
</UL>

<P><STRONG><a name="[9f]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Loop
</UL>

<P><STRONG><a name="[a0]"></a>strtok</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, strtok.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strtok
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Loop
</UL>

<P><STRONG><a name="[81]"></a>strtoul</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Freq_Callback
</UL>

<P><STRONG><a name="[85]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_TRSW_event_callback
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SLEEP_event_callback
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SF_Callback
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RX_BOOST_event_callback
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Power_Callback
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Param_Callback
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_PA_REAL_POWER_event_callback
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_PA_DUTY_CYCLE_event_callback
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_NB_FRAME_event_callback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CW_event_callback
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CR_Callback
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_BW_Callback
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_PA_SEL_event_callback
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_PA_RGE_SUPPLY_event_callback
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_HP_PA_SEL_event_callback
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[166]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[167]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[168]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[84]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[86]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[169]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8a]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[16a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[16b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[16c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>ATC_HP_PA_SEL_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.ATC_HP_PA_SEL_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ATC_HP_PA_SEL_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[96]"></a>ATC_IdleLine</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.ATC_IdleLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ATC_IdleLine &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[98]"></a>ATC_Init</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, atc.o(i.ATC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ATC_Init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[9d]"></a>ATC_Loop</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, atc.o(i.ATC_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ATC_Loop &rArr; strtok
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[18]"></a>ATC_PA_RGE_SUPPLY_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.ATC_PA_RGE_SUPPLY_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ATC_PA_RGE_SUPPLY_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>ATC_PA_SEL_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.ATC_PA_SEL_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ATC_PA_SEL_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[a1]"></a>ATC_SetEvents</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, atc.o(i.ATC_SetEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ATC_SetEvents &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[d]"></a>AT_BW_Callback</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, uart_init.o(i.AT_BW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_BW_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>AT_CR_Callback</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, uart_init.o(i.AT_CR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_CR_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>AT_CW_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_CW_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_CW_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>AT_Freq_Callback</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, uart_init.o(i.AT_Freq_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = AT_Freq_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>AT_Help_Callback</STRONG> (Thumb, 2772 bytes, Stack size 16 bytes, uart_init.o(i.AT_Help_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_Help_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>AT_NB_FRAME_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_NB_FRAME_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_NB_FRAME_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>AT_PA_DUTY_CYCLE_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_PA_DUTY_CYCLE_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_PA_DUTY_CYCLE_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>AT_PA_REAL_POWER_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_PA_REAL_POWER_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_PA_REAL_POWER_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>AT_Param_Callback</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, uart_init.o(i.AT_Param_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_Param_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>AT_Power_Callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_Power_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_Power_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>AT_RX_BOOST_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_RX_BOOST_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_RX_BOOST_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>AT_SF_Callback</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, uart_init.o(i.AT_SF_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_SF_Callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>AT_SLEEP_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_SLEEP_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_SLEEP_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>AT_START_event_callback</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, uart_init.o(i.AT_START_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_START_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>AT_TRSW_event_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, uart_init.o(i.AT_TRSW_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = AT_TRSW_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI0_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI15_10_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI1_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI2_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI3_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI4_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI9_5_IRQHandler &rArr; smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_call_exti_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_ClearFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>LL_EXTI_Init</STRONG> (Thumb, 362 bytes, Stack size 16 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableRisingTrig_32_63
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableRisingTrig_0_31
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableIT_32_63
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableIT_0_31
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableFallingTrig_32_63
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableFallingTrig_0_31
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableEvent_32_63
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableEvent_0_31
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DisableIT_32_63
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DisableIT_0_31
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DisableEvent_32_63
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DisableEvent_0_31
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[144]"></a>LL_GPIO_Init</STRONG> (Thumb, 302 bytes, Stack size 20 bytes, stm32l4xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[148]"></a>LL_Init1msTick</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l4xx_ll_utils.o(i.LL_Init1msTick))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_init
</UL>

<P><STRONG><a name="[b2]"></a>LL_RCC_GetUARTClockFreq</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_GetUARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LL_RCC_GetUARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_LSE_IsReady
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_IsReady
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[b9]"></a>LL_RCC_GetUSARTClockFreq</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_GetUSARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2ClockFreq
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_LSE_IsReady
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_IsReady
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[14c]"></a>LL_SPI_Init</STRONG> (Thumb, 126 bytes, Stack size 12 bytes, stm32l4xx_ll_spi.o(i.LL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
</UL>

<P><STRONG><a name="[149]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_ll_utils.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_init
</UL>

<P><STRONG><a name="[bc]"></a>LL_USART_Init</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, stm32l4xx_ll_usart.o(i.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[11b]"></a>LL_mDelay</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32l4xx_ll_utils.o(i.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_reset
</UL>

<P><STRONG><a name="[66]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, smtc_hal_mcu_timer_stm32l4.o(i.LPTIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTIM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SystemInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>USART2_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, smtc_hal_mcu_uart_stm32l4.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsActiveFlag_RXNE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16e]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[16f]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[170]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[15a]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[171]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[172]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[173]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[174]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[cd]"></a>apps_common_lr11xx_fetch_and_print_version</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, apps_common.o(i.apps_common_lr11xx_fetch_and_print_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = apps_common_lr11xx_fetch_and_print_version &rArr; apps_common_lr11xx_fetch_version &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_print_version
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_fetch_version
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>apps_common_lr11xx_fetch_version</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, apps_common.o(i.apps_common_lr11xx_fetch_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = apps_common_lr11xx_fetch_version &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_version
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_fetch_and_print_version
</UL>

<P><STRONG><a name="[d1]"></a>apps_common_lr11xx_get_context</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_lr11xx_get_context))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = apps_common_lr11xx_get_context &rArr; smtc_hal_mcu_spi_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_pinout_mapping_get_gpio_cfg
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>apps_common_lr11xx_handle_post_rx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_lr11xx_handle_post_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apps_common_lr11xx_handle_post_rx &rArr; smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
</UL>

<P><STRONG><a name="[d9]"></a>apps_common_lr11xx_handle_post_tx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_lr11xx_handle_post_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apps_common_lr11xx_handle_post_tx &rArr; smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
</UL>

<P><STRONG><a name="[da]"></a>apps_common_lr11xx_handle_pre_rx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_lr11xx_handle_pre_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apps_common_lr11xx_handle_pre_rx &rArr; smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
</UL>

<P><STRONG><a name="[db]"></a>apps_common_lr11xx_handle_pre_tx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_lr11xx_handle_pre_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apps_common_lr11xx_handle_pre_tx &rArr; smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>apps_common_lr11xx_irq_process</STRONG> (Thumb, 922 bytes, Stack size 16 bytes, apps_common.o(i.apps_common_lr11xx_irq_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = apps_common_lr11xx_irq_process &rArr; on_rx_done &rArr; apps_common_lr11xx_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_wifi_scan_done
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_syncword_header_valid
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_timeout
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_response_done
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_request_valid
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_request_discarded
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_exchange_valid
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_preamble_detected
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_lora_rx_timestamp
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_header_error
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_gnss_scan_done
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_undetected
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_detected
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_and_clear_irq_status
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_timeout
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_crc_error
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_fsk_len_error
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>apps_common_lr11xx_print_version</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_lr11xx_print_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = apps_common_lr11xx_print_version &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_fetch_and_print_version
</UL>

<P><STRONG><a name="[f0]"></a>apps_common_lr11xx_radio_init</STRONG> (Thumb, 818 bytes, Stack size 32 bytes, apps_common.o(i.apps_common_lr11xx_radio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = apps_common_lr11xx_radio_init &rArr; print_lora_configuration &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_params
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_tx_fallback_mode
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rssi_calibration
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rf_freq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_pkt_type
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_pa_cfg
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lora_sync_word
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lora_pkt_params
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lora_mod_params
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_cfg_rx_boosted
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_common_configuration
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_get_rssi_calibration_table
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_get_pa_pwr_cfg
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_compute_lora_ldro
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>apps_common_lr11xx_receive</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, apps_common.o(i.apps_common_lr11xx_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = apps_common_lr11xx_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_read_buffer8
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_rx_buffer_status
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_pkt_status
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
</UL>

<P><STRONG><a name="[104]"></a>apps_common_lr11xx_system_init</STRONG> (Thumb, 678 bytes, Stack size 40 bytes, apps_common.o(i.apps_common_lr11xx_system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = apps_common_lr11xx_system_init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_tcxo_mode
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_reg_mode
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_dio_as_rf_switch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_reset
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_errors
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_clear_irq_status
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_clear_errors
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_cfg_lfclk
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_calibrate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>apps_common_print_sdk_driver_version</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_print_sdk_driver_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = apps_common_print_sdk_driver_version &rArr; common_version_print &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_version_print
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_driver_version
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[111]"></a>apps_common_shield_init</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, apps_common.o(i.apps_common_shield_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = apps_common_shield_init &rArr; smtc_hal_mcu_gpio_init_output &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_pinout_mapping_get_gpio_cfg
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>atc_per_event_callback</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, uart_init.o(i.atc_per_event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = atc_per_event_callback &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(.data)
</UL>
<P><STRONG><a name="[10f]"></a>common_version_print</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, common_version.o(i.common_version_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = common_version_print &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_print_sdk_driver_version
</UL>

<P><STRONG><a name="[9c]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
</UL>

<P><STRONG><a name="[112]"></a>get_time_on_air_in_ms</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, apps_common.o(i.get_time_on_air_in_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = get_time_on_air_in_ms &rArr; lr11xx_radio_get_lora_time_on_air_in_ms &rArr; lr11xx_radio_get_lora_time_on_air_numerator
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_time_on_air_in_ms
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_gfsk_time_on_air_in_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>hal_mcu_trace_print</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, smtc_hal_dbg_trace.o(i.hal_mcu_trace_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_wifi_scan_done
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_syncword_header_valid
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_timeout
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_response_done
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_request_valid
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_request_discarded
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rttof_exchange_valid
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_preamble_detected
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_lora_rx_timestamp
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_header_error
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_gnss_scan_done
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_undetected
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_detected
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_version_print
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_common_configuration
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_print_sdk_driver_version
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_receive
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_print_version
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_fetch_version
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_driver_version
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_SetEvents
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc_per_event_callback
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_TRSW_event_callback
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_START_event_callback
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SLEEP_event_callback
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SF_Callback
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RX_BOOST_event_callback
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Power_Callback
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Param_Callback
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_PA_REAL_POWER_event_callback
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_PA_DUTY_CYCLE_event_callback
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_NB_FRAME_event_callback
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Help_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_Freq_Callback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CW_event_callback
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CR_Callback
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_BW_Callback
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_PA_SEL_event_callback
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_PA_RGE_SUPPLY_event_callback
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_IdleLine
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_HP_PA_SEL_event_callback
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init_base
</UL>

<P><STRONG><a name="[138]"></a>lr11xx_driver_version_get_version_string</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lr11xx_driver_version.o(i.lr11xx_driver_version_get_version_string))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_driver_version
</UL>

<P><STRONG><a name="[116]"></a>lr11xx_hal_direct_read</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lr11xx_hal.o(i.lr11xx_hal_direct_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lr11xx_hal_direct_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_wait_on_busy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_status
</UL>

<P><STRONG><a name="[119]"></a>lr11xx_hal_read</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, lr11xx_hal.o(i.lr11xx_hal_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lr11xx_hal_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_wait_on_busy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_version
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_errors
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_read_buffer8
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_rx_buffer_status
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_pkt_status
</UL>

<P><STRONG><a name="[11a]"></a>lr11xx_hal_reset</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lr11xx_hal.o(i.lr11xx_hal_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lr11xx_hal_reset &rArr; smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_reset
</UL>

<P><STRONG><a name="[117]"></a>lr11xx_hal_wait_on_busy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lr11xx_hal.o(i.lr11xx_hal_wait_on_busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_direct_read
</UL>

<P><STRONG><a name="[11d]"></a>lr11xx_hal_write</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, lr11xx_hal.o(i.lr11xx_hal_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_wait_on_busy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_tcxo_mode
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_reg_mode
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_dio_as_rf_switch
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_clear_irq_status
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_clear_errors
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_cfg_lfclk
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_calibrate
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_params
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_tx_fallback_mode
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rssi_calibration
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rf_freq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_pkt_type
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_pa_cfg
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lora_sync_word
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lora_pkt_params
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lora_mod_params
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_cfg_rx_boosted
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_sleep
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_dio_irq_params
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_buffer8
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_cw
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_regmem32_mask
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_with_timeout_in_rtc_step
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode
</UL>

<P><STRONG><a name="[11e]"></a>lr11xx_radio_apply_high_acp_workaround</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lr11xx_radio.o(i.lr11xx_radio_apply_high_acp_workaround))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lr11xx_radio_apply_high_acp_workaround &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_regmem32_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_with_timeout_in_rtc_step
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode
</UL>

<P><STRONG><a name="[fa]"></a>lr11xx_radio_cfg_rx_boosted</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_cfg_rx_boosted))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_cfg_rx_boosted &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[125]"></a>lr11xx_radio_convert_time_in_ms_to_rtc_step</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lr11xx_radio.o(i.lr11xx_radio_convert_time_in_ms_to_rtc_step))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx
</UL>

<P><STRONG><a name="[137]"></a>lr11xx_radio_fallback_modes_to_str</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_fallback_modes_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_common_configuration
</UL>

<P><STRONG><a name="[114]"></a>lr11xx_radio_get_gfsk_time_on_air_in_ms</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, lr11xx_radio.o(i.lr11xx_radio_get_gfsk_time_on_air_in_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lr11xx_radio_get_gfsk_time_on_air_in_ms &rArr; lr11xx_radio_get_gfsk_time_on_air_numerator
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_gfsk_time_on_air_numerator
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_on_air_in_ms
</UL>

<P><STRONG><a name="[120]"></a>lr11xx_radio_get_gfsk_time_on_air_numerator</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, lr11xx_radio.o(i.lr11xx_radio_get_gfsk_time_on_air_numerator))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lr11xx_radio_get_gfsk_time_on_air_numerator
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_gfsk_time_on_air_in_ms
</UL>

<P><STRONG><a name="[122]"></a>lr11xx_radio_get_lora_bw_in_hz</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lr11xx_radio.o(i.lr11xx_radio_get_lora_bw_in_hz))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_time_on_air_in_ms
</UL>

<P><STRONG><a name="[103]"></a>lr11xx_radio_get_lora_pkt_status</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, lr11xx_radio.o(i.lr11xx_radio_get_lora_pkt_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_radio_get_lora_pkt_status &rArr; lr11xx_hal_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_receive
</UL>

<P><STRONG><a name="[113]"></a>lr11xx_radio_get_lora_time_on_air_in_ms</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, lr11xx_radio.o(i.lr11xx_radio_get_lora_time_on_air_in_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lr11xx_radio_get_lora_time_on_air_in_ms &rArr; lr11xx_radio_get_lora_time_on_air_numerator
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_time_on_air_numerator
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_bw_in_hz
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_on_air_in_ms
</UL>

<P><STRONG><a name="[121]"></a>lr11xx_radio_get_lora_time_on_air_numerator</STRONG> (Thumb, 436 bytes, Stack size 68 bytes, lr11xx_radio.o(i.lr11xx_radio_get_lora_time_on_air_numerator))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lr11xx_radio_get_lora_time_on_air_numerator
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_get_lora_time_on_air_in_ms
</UL>

<P><STRONG><a name="[101]"></a>lr11xx_radio_get_rx_buffer_status</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, lr11xx_radio.o(i.lr11xx_radio_get_rx_buffer_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_radio_get_rx_buffer_status &rArr; lr11xx_hal_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_receive
</UL>

<P><STRONG><a name="[13a]"></a>lr11xx_radio_lora_bw_to_str</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_lora_bw_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
</UL>

<P><STRONG><a name="[13b]"></a>lr11xx_radio_lora_cr_to_str</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_lora_cr_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
</UL>

<P><STRONG><a name="[13d]"></a>lr11xx_radio_lora_crc_to_str</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_lora_crc_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
</UL>

<P><STRONG><a name="[13e]"></a>lr11xx_radio_lora_iq_to_str</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_lora_iq_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
</UL>

<P><STRONG><a name="[13c]"></a>lr11xx_radio_lora_pkt_len_modes_to_str</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_lora_pkt_len_modes_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
</UL>

<P><STRONG><a name="[139]"></a>lr11xx_radio_lora_sf_to_str</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_lora_sf_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_lora_configuration
</UL>

<P><STRONG><a name="[136]"></a>lr11xx_radio_pkt_type_to_str</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lr11xx_radio_types_str.o(i.lr11xx_radio_pkt_type_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_common_configuration
</UL>

<P><STRONG><a name="[123]"></a>lr11xx_radio_set_lna_mode</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lr11xx_radio.o(i.lr11xx_radio_set_lna_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lr11xx_radio_set_lna_mode &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_regmem32_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode
</UL>

<P><STRONG><a name="[fd]"></a>lr11xx_radio_set_lora_mod_params</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_lora_mod_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_lora_mod_params &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[fe]"></a>lr11xx_radio_set_lora_pkt_params</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_lora_pkt_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_lora_pkt_params &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[ff]"></a>lr11xx_radio_set_lora_sync_word</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_lora_sync_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_lora_sync_word &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[f7]"></a>lr11xx_radio_set_pa_cfg</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_pa_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_pa_cfg &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[f3]"></a>lr11xx_radio_set_pkt_type</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_pkt_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_pkt_type &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[f4]"></a>lr11xx_radio_set_rf_freq</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_rf_freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_rf_freq &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[f6]"></a>lr11xx_radio_set_rssi_calibration</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, lr11xx_radio.o(i.lr11xx_radio_set_rssi_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lr11xx_radio_set_rssi_calibration &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[124]"></a>lr11xx_radio_set_rx</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lr11xx_radio.o(i.lr11xx_radio_set_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = lr11xx_radio_set_rx &rArr; lr11xx_radio_set_rx_with_timeout_in_rtc_step &rArr; lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode &rArr; lr11xx_radio_set_lna_mode &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_with_timeout_in_rtc_step
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_convert_time_in_ms_to_rtc_step
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
</UL>

<P><STRONG><a name="[f9]"></a>lr11xx_radio_set_rx_tx_fallback_mode</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_rx_tx_fallback_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_rx_tx_fallback_mode &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[126]"></a>lr11xx_radio_set_rx_with_timeout_in_rtc_step</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lr11xx_radio.o(i.lr11xx_radio_set_rx_with_timeout_in_rtc_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lr11xx_radio_set_rx_with_timeout_in_rtc_step &rArr; lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode &rArr; lr11xx_radio_set_lna_mode &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx
</UL>

<P><STRONG><a name="[127]"></a>lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, lr11xx_radio.o(i.lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lr11xx_radio_set_rx_with_timeout_in_rtc_step_and_lna_mode &rArr; lr11xx_radio_set_lna_mode &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lna_mode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_apply_high_acp_workaround
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx_with_timeout_in_rtc_step
</UL>

<P><STRONG><a name="[128]"></a>lr11xx_radio_set_tx</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lr11xx_radio.o(i.lr11xx_radio_set_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lr11xx_radio_set_tx &rArr; lr11xx_radio_set_tx_with_timeout_in_rtc_step &rArr; lr11xx_radio_apply_high_acp_workaround &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_with_timeout_in_rtc_step
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_convert_time_in_ms_to_rtc_step
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12a]"></a>lr11xx_radio_set_tx_cw</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lr11xx_radio.o(i.lr11xx_radio_set_tx_cw))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lr11xx_radio_set_tx_cw &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>lr11xx_radio_set_tx_params</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lr11xx_radio.o(i.lr11xx_radio_set_tx_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_radio_set_tx_params &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[129]"></a>lr11xx_radio_set_tx_with_timeout_in_rtc_step</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, lr11xx_radio.o(i.lr11xx_radio_set_tx_with_timeout_in_rtc_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lr11xx_radio_set_tx_with_timeout_in_rtc_step &rArr; lr11xx_radio_apply_high_acp_workaround &rArr; lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_apply_high_acp_workaround
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx
</UL>

<P><STRONG><a name="[102]"></a>lr11xx_regmem_read_buffer8</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, lr11xx_regmem.o(i.lr11xx_regmem_read_buffer8))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_regmem_read_buffer8 &rArr; lr11xx_hal_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_receive
</UL>

<P><STRONG><a name="[12b]"></a>lr11xx_regmem_write_buffer8</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lr11xx_regmem.o(i.lr11xx_regmem_write_buffer8))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_regmem_write_buffer8 &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>lr11xx_regmem_write_regmem32_mask</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, lr11xx_regmem.o(i.lr11xx_regmem_write_regmem32_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_regmem_write_regmem32_mask &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_fill_cbuffer_opcode_address
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_lna_mode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_apply_high_acp_workaround
</UL>

<P><STRONG><a name="[10b]"></a>lr11xx_system_calibrate</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr11xx_system.o(i.lr11xx_system_calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_system_calibrate &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[109]"></a>lr11xx_system_cfg_lfclk</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr11xx_system.o(i.lr11xx_system_cfg_lfclk))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_system_cfg_lfclk &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[10a]"></a>lr11xx_system_clear_errors</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lr11xx_system.o(i.lr11xx_system_clear_errors))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lr11xx_system_clear_errors &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[10d]"></a>lr11xx_system_clear_irq_status</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lr11xx_system.o(i.lr11xx_system_clear_irq_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_system_clear_irq_status &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_and_clear_irq_status
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>lr11xx_system_get_and_clear_irq_status</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lr11xx_system.o(i.lr11xx_system_get_and_clear_irq_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lr11xx_system_get_and_clear_irq_status &rArr; lr11xx_system_clear_irq_status &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_clear_irq_status
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[10c]"></a>lr11xx_system_get_errors</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, lr11xx_system.o(i.lr11xx_system_get_errors))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_system_get_errors &rArr; lr11xx_hal_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[12d]"></a>lr11xx_system_get_status</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, lr11xx_system.o(i.lr11xx_system_get_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_system_get_status &rArr; lr11xx_hal_direct_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_direct_read
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_convert_stat2_byte_to_enum
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_convert_stat1_byte_to_enum
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_and_clear_irq_status
</UL>

<P><STRONG><a name="[d0]"></a>lr11xx_system_get_version</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lr11xx_system.o(i.lr11xx_system_get_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_system_get_version &rArr; lr11xx_hal_read &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_fetch_version
</UL>

<P><STRONG><a name="[105]"></a>lr11xx_system_reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lr11xx_system.o(i.lr11xx_system_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lr11xx_system_reset &rArr; lr11xx_hal_reset &rArr; smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[107]"></a>lr11xx_system_set_dio_as_rf_switch</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, lr11xx_system.o(i.lr11xx_system_set_dio_as_rf_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lr11xx_system_set_dio_as_rf_switch &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[130]"></a>lr11xx_system_set_dio_irq_params</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, lr11xx_system.o(i.lr11xx_system_set_dio_irq_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lr11xx_system_set_dio_irq_params &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>lr11xx_system_set_reg_mode</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr11xx_system.o(i.lr11xx_system_set_reg_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lr11xx_system_set_reg_mode &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[131]"></a>lr11xx_system_set_sleep</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, lr11xx_system.o(i.lr11xx_system_set_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lr11xx_system_set_sleep &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>lr11xx_system_set_tcxo_mode</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, lr11xx_system.o(i.lr11xx_system_set_tcxo_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lr11xx_system_set_tcxo_mode &rArr; lr11xx_hal_write &rArr; lr11xx_hal_wait_on_busy &rArr; smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
</UL>

<P><STRONG><a name="[76]"></a>main</STRONG> (Thumb, 672 bytes, Stack size 24 bytes, main_per.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = main &rArr; apps_common_lr11xx_irq_process &rArr; on_rx_done &rArr; apps_common_lr11xx_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_clear_irq_status
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_on_air_in_ms
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_shield_init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_print_sdk_driver_version
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_system_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_tx
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_rx
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_get_context
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_fetch_and_print_version
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_sleep
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_set_dio_irq_params
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_buffer8
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx_cw
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[134]"></a>main_loop</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, uart_init.o(i.main_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = main_loop &rArr; ATC_IdleLine &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Loop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_IdleLine
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
</UL>

<P><STRONG><a name="[e5]"></a>on_cad_done_detected</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_cad_done_detected))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_cad_done_detected &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e6]"></a>on_cad_done_undetected</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_cad_done_undetected))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_cad_done_undetected &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e3]"></a>on_fsk_len_error</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main_per.o(i.on_fsk_len_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = on_fsk_len_error &rArr; per_reception_failure_handling &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[ef]"></a>on_gnss_scan_done</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_gnss_scan_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_gnss_scan_done &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e0]"></a>on_header_error</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_header_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_header_error &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e8]"></a>on_lora_rx_timestamp</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_lora_rx_timestamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_lora_rx_timestamp &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[df]"></a>on_preamble_detected</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_preamble_detected))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_preamble_detected &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[ec]"></a>on_rttof_exchange_valid</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_rttof_exchange_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_rttof_exchange_valid &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[ea]"></a>on_rttof_request_discarded</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_rttof_request_discarded))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_rttof_request_discarded &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e9]"></a>on_rttof_request_valid</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_rttof_request_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_rttof_request_valid &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[eb]"></a>on_rttof_response_done</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_rttof_response_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_rttof_response_done &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[ed]"></a>on_rttof_timeout</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_rttof_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_rttof_timeout &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e2]"></a>on_rx_crc_error</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main_per.o(i.on_rx_crc_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = on_rx_crc_error &rArr; per_reception_failure_handling &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e4]"></a>on_rx_done</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, main_per.o(i.on_rx_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = on_rx_done &rArr; apps_common_lr11xx_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_receive
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_rx
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_post_rx
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e7]"></a>on_rx_timeout</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main_per.o(i.on_rx_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = on_rx_timeout &rArr; per_reception_failure_handling &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_reception_failure_handling
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[e1]"></a>on_syncword_header_valid</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_syncword_header_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_syncword_header_valid &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[de]"></a>on_tx_done</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, main_per.o(i.on_tx_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = on_tx_done &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_tx
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_post_tx
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_buffer8
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_tx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[ee]"></a>on_wifi_scan_done</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apps_common.o(i.on_wifi_scan_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_wifi_scan_done &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_irq_process
</UL>

<P><STRONG><a name="[f2]"></a>print_common_configuration</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, apps_common.o(i.print_common_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = print_common_configuration &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_pkt_type_to_str
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_fallback_modes_to_str
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[fb]"></a>print_lora_configuration</STRONG> (Thumb, 402 bytes, Stack size 8 bytes, apps_common.o(i.print_lora_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = print_lora_configuration &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_lora_sf_to_str
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_lora_pkt_len_modes_to_str
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_lora_iq_to_str
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_lora_crc_to_str
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_lora_cr_to_str
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_lora_bw_to_str
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[7a]"></a>radio_on_dio_irq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apps_common.o(i.radio_on_dio_irq))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(i.apps_common_lr11xx_get_context)
</UL>
<P><STRONG><a name="[d5]"></a>smtc_hal_mcu_gpio_enable_irq</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_enable_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smtc_hal_mcu_gpio_enable_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_is_real_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_get_context
</UL>

<P><STRONG><a name="[11c]"></a>smtc_hal_mcu_gpio_get_state</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_is_real_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_wait_on_busy
</UL>

<P><STRONG><a name="[d3]"></a>smtc_hal_mcu_gpio_init_input</STRONG> (Thumb, 208 bytes, Stack size 80 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_init_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = smtc_hal_mcu_gpio_init_input &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_is_configured
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_get_trigger
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_get_free_slot
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_get_exti_cfg
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_enable_clock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_get_context
</UL>

<P><STRONG><a name="[d4]"></a>smtc_hal_mcu_gpio_init_output</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_init_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = smtc_hal_mcu_gpio_init_output &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_is_configured
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_get_free_slot
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_enable_clock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_shield_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_get_context
</UL>

<P><STRONG><a name="[d8]"></a>smtc_hal_mcu_gpio_set_state</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_is_real_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_tx
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_rx
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_post_tx
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_post_rx
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_direct_read
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_reset
</UL>

<P><STRONG><a name="[132]"></a>smtc_hal_mcu_init</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, smtc_hal_mcu_stm32l4.o(i.smtc_hal_mcu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smtc_hal_mcu_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>smtc_hal_mcu_spi_init</STRONG> (Thumb, 258 bytes, Stack size 88 bytes, smtc_hal_mcu_spi_stm32l4.o(i.smtc_hal_mcu_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = smtc_hal_mcu_spi_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_stm32l4_get_free_slot
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB2_GRP1_EnableClock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_get_context
</UL>

<P><STRONG><a name="[118]"></a>smtc_hal_mcu_spi_rw_buffer</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, smtc_hal_mcu_spi_stm32l4.o(i.smtc_hal_mcu_spi_rw_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_stm32l4_is_real_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_write
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_read
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_hal_direct_read
</UL>

<P><STRONG><a name="[14e]"></a>smtc_hal_mcu_uart_init</STRONG> (Thumb, 304 bytes, Stack size 80 bytes, smtc_hal_mcu_uart_stm32l4.o(i.smtc_hal_mcu_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smtc_hal_mcu_uart_init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_stm32l4_get_free_slot
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsEnabled
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB2_GRP1_EnableClock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init_base
</UL>

<P><STRONG><a name="[15b]"></a>smtc_hal_mcu_uart_send</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, smtc_hal_mcu_uart_stm32l4.o(i.smtc_hal_mcu_uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = smtc_hal_mcu_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[5]"></a>smtc_shield_lr1120mb1dis_get_lfclk_cfg</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_lfclk_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dis_get_lfclk_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_common_get_lfclk_cfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>smtc_shield_lr1120mb1dis_get_pa_pwr_cfg</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_pa_pwr_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smtc_shield_lr1120mb1dis_get_pa_pwr_cfg &rArr; smtc_shield_lr1120mb1dxs_common_get_pa_pwr_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dxs_common_get_pa_pwr_cfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>smtc_shield_lr1120mb1dis_get_pinout</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_pinout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dis_get_pinout
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_common_get_pinout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>smtc_shield_lr1120mb1dis_get_reg_mode</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_reg_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dis_get_reg_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_common_get_reg_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>smtc_shield_lr1120mb1dis_get_rf_switch_cfg</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_rf_switch_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dis_get_rf_switch_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_common_get_rf_switch_cfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>smtc_shield_lr1120mb1dis_get_rssi_calibration_table</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_rssi_calibration_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dis_get_rssi_calibration_table
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11xx_get_rssi_calibration_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>smtc_shield_lr1120mb1dis_get_xosc_cfg</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dis.o(i.smtc_shield_lr1120mb1dis_get_xosc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dis_get_xosc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr11x0_common_get_xosc_cfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[153]"></a>smtc_shield_lr1120mb1dxs_common_get_pa_pwr_cfg</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, smtc_shield_lr1120mb1dxs_common.o(i.smtc_shield_lr1120mb1dxs_common_get_pa_pwr_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_shield_lr1120mb1dxs_common_get_pa_pwr_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_pa_pwr_cfg
</UL>

<P><STRONG><a name="[158]"></a>smtc_shield_lr11x0_common_get_xosc_cfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_lr11x0_common.o(i.smtc_shield_lr11x0_common_get_xosc_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_xosc_cfg
</UL>

<P><STRONG><a name="[7]"></a>smtc_shield_lr11x0_common_rttof_recommended_rx_tx_delay_indicator</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, smtc_shield_lr11x0_common.o(i.smtc_shield_lr11x0_common_rttof_recommended_rx_tx_delay_indicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = smtc_shield_lr11x0_common_rttof_recommended_rx_tx_delay_indicator
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data)
</UL>
<P><STRONG><a name="[152]"></a>smtc_shield_lr11xx_common_get_lfclk_cfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_lr11xx_common.o(i.smtc_shield_lr11xx_common_get_lfclk_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_lfclk_cfg
</UL>

<P><STRONG><a name="[154]"></a>smtc_shield_lr11xx_common_get_pinout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_lr11xx_common.o(i.smtc_shield_lr11xx_common_get_pinout))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_pinout
</UL>

<P><STRONG><a name="[155]"></a>smtc_shield_lr11xx_common_get_reg_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_lr11xx_common.o(i.smtc_shield_lr11xx_common_get_reg_mode))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_reg_mode
</UL>

<P><STRONG><a name="[156]"></a>smtc_shield_lr11xx_common_get_rf_switch_cfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_lr11xx_common.o(i.smtc_shield_lr11xx_common_get_rf_switch_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_rf_switch_cfg
</UL>

<P><STRONG><a name="[157]"></a>smtc_shield_lr11xx_get_rssi_calibration_table</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, smtc_shield_lr11xx_common.o(i.smtc_shield_lr11xx_get_rssi_calibration_table))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_lr1120mb1dis_get_rssi_calibration_table
</UL>

<P><STRONG><a name="[d2]"></a>smtc_shield_pinout_mapping_get_gpio_cfg</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtc_shield_pinout_mapping.o(i.smtc_shield_pinout_mapping_get_gpio_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_shield_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_get_context
</UL>

<P><STRONG><a name="[133]"></a>uart_init</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, uart_init.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = uart_init &rArr; ATC_Init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_SetEvents
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATC_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init_base
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[115]"></a>vprint</STRONG> (Thumb, 44 bytes, Stack size 280 bytes, uart_init.o(i.vprint))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_send
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[fc]"></a>apps_common_compute_lora_ldro</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, apps_common.o(i.apps_common_compute_lora_ldro))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[110]"></a>print_driver_version</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, apps_common.o(i.print_driver_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = print_driver_version &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_driver_version_get_version_string
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_print_sdk_driver_version
</UL>

<P><STRONG><a name="[f1]"></a>smtc_shield_lr11xx_get_pa_pwr_cfg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, apps_common.o(i.smtc_shield_lr11xx_get_pa_pwr_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smtc_shield_lr11xx_get_pa_pwr_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[f5]"></a>smtc_shield_lr11xx_get_rssi_calibration_table</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, apps_common.o(i.smtc_shield_lr11xx_get_rssi_calibration_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smtc_shield_lr11xx_get_rssi_calibration_table
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_radio_init
</UL>

<P><STRONG><a name="[159]"></a>uart_init_base</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, uart_init.o(i.uart_init_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = uart_init_base &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[7b]"></a>uart_rx_callback</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, uart_init.o(i.uart_rx_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_rx_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_init.o(i.uart_init)
</UL>
<P><STRONG><a name="[135]"></a>per_reception_failure_handling</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, main_per.o(i.per_reception_failure_handling))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = per_reception_failure_handling &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_pre_rx
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_lr11xx_handle_post_rx
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_radio_set_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_timeout
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_crc_error
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_fsk_len_error
</UL>

<P><STRONG><a name="[bd]"></a>LL_USART_IsEnabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_usart.o(i.LL_USART_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[b3]"></a>LL_RCC_GetUARTClockSource</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_GetUARTClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[ba]"></a>LL_RCC_GetUSARTClockSource</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_GetUSARTClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[b5]"></a>LL_RCC_HSI_IsReady</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_HSI_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[b6]"></a>LL_RCC_LSE_IsReady</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_LSE_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[bf]"></a>LL_RCC_MSI_GetRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_MSI_GetRange))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[c0]"></a>LL_RCC_MSI_GetRangeAfterStandby</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_MSI_GetRangeAfterStandby))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[be]"></a>LL_RCC_MSI_IsEnabledRangeSelect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_MSI_IsEnabledRangeSelect))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[c3]"></a>LL_RCC_PLL_GetDivider</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_PLL_GetDivider))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[c2]"></a>LL_RCC_PLL_GetMainSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_PLL_GetMainSource))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[c4]"></a>LL_RCC_PLL_GetN</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.LL_RCC_PLL_GetN))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[b7]"></a>RCC_GetHCLKClockFreq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.RCC_GetHCLKClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[b8]"></a>RCC_GetPCLK1ClockFreq</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.RCC_GetPCLK1ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[bb]"></a>RCC_GetPCLK2ClockFreq</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(i.RCC_GetPCLK2ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[b4]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, stm32l4xx_ll_rcc.o(i.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_MSI_IsEnabledRangeSelect
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_MSI_GetRangeAfterStandby
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_MSI_GetRange
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[c1]"></a>RCC_PLL_GetFreqDomain_SYS</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, stm32l4xx_ll_rcc.o(i.RCC_PLL_GetFreqDomain_SYS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_GetN
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_GetMainSource
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_GetDivider
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_MSI_IsEnabledRangeSelect
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_MSI_GetRangeAfterStandby
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_MSI_GetRange
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[a6]"></a>LL_EXTI_DisableEvent_0_31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_DisableEvent_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[ac]"></a>LL_EXTI_DisableEvent_32_63</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_DisableEvent_32_63))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[a8]"></a>LL_EXTI_DisableIT_0_31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_DisableIT_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[ae]"></a>LL_EXTI_DisableIT_32_63</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_DisableIT_32_63))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[a9]"></a>LL_EXTI_EnableEvent_0_31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableEvent_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[af]"></a>LL_EXTI_EnableEvent_32_63</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableEvent_32_63))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[ab]"></a>LL_EXTI_EnableFallingTrig_0_31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableFallingTrig_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[b1]"></a>LL_EXTI_EnableFallingTrig_32_63</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableFallingTrig_32_63))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[a7]"></a>LL_EXTI_EnableIT_0_31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableIT_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[ad]"></a>LL_EXTI_EnableIT_32_63</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableIT_32_63))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[aa]"></a>LL_EXTI_EnableRisingTrig_0_31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableRisingTrig_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[b0]"></a>LL_EXTI_EnableRisingTrig_32_63</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_exti.o(i.LL_EXTI_EnableRisingTrig_32_63))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[12c]"></a>lr11xx_regmem_fill_cbuffer_opcode_address</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lr11xx_regmem.o(i.lr11xx_regmem_fill_cbuffer_opcode_address))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_regmem_write_regmem32_mask
</UL>

<P><STRONG><a name="[12e]"></a>lr11xx_system_convert_stat1_byte_to_enum</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lr11xx_system.o(i.lr11xx_system_convert_stat1_byte_to_enum))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_status
</UL>

<P><STRONG><a name="[12f]"></a>lr11xx_system_convert_stat2_byte_to_enum</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lr11xx_system.o(i.lr11xx_system_convert_stat2_byte_to_enum))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr11xx_system_get_status
</UL>

<P><STRONG><a name="[147]"></a>LL_AHB2_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.LL_AHB2_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_enable_clock
</UL>

<P><STRONG><a name="[a3]"></a>LL_EXTI_ClearFlag_0_31</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.LL_EXTI_ClearFlag_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>LL_EXTI_IsActiveFlag_0_31</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.LL_EXTI_IsActiveFlag_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>smtc_hal_mcu_gpio_stm32l4_call_exti_callback</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_call_exti_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smtc_hal_mcu_gpio_stm32l4_call_exti_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[143]"></a>smtc_hal_mcu_gpio_stm32l4_enable_clock</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_enable_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smtc_hal_mcu_gpio_stm32l4_enable_clock &rArr; LL_AHB2_GRP1_EnableClock
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[145]"></a>smtc_hal_mcu_gpio_stm32l4_get_exti_cfg</STRONG> (Thumb, 486 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_get_exti_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[141]"></a>smtc_hal_mcu_gpio_stm32l4_get_free_slot</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_get_free_slot))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[146]"></a>smtc_hal_mcu_gpio_stm32l4_get_trigger</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_get_trigger))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[140]"></a>smtc_hal_mcu_gpio_stm32l4_is_configured</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_is_configured))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[13f]"></a>smtc_hal_mcu_gpio_stm32l4_is_real_inst</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(i.smtc_hal_mcu_gpio_stm32l4_is_real_inst))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_enable_irq
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_get_state
</UL>

<P><STRONG><a name="[150]"></a>LL_AHB2_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_uart_stm32l4.o(i.LL_AHB2_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[c5]"></a>LL_USART_IsActiveFlag_RXNE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtc_hal_mcu_uart_stm32l4.o(i.LL_USART_IsActiveFlag_RXNE))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[151]"></a>LL_USART_IsEnabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtc_hal_mcu_uart_stm32l4.o(i.LL_USART_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[14f]"></a>smtc_hal_mcu_uart_stm32l4_get_free_slot</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, smtc_hal_mcu_uart_stm32l4.o(i.smtc_hal_mcu_uart_stm32l4_get_free_slot))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[14b]"></a>LL_AHB2_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_mcu_spi_stm32l4.o(i.LL_AHB2_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
</UL>

<P><STRONG><a name="[14a]"></a>smtc_hal_mcu_spi_stm32l4_get_free_slot</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, smtc_hal_mcu_spi_stm32l4.o(i.smtc_hal_mcu_spi_stm32l4_get_free_slot))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
</UL>

<P><STRONG><a name="[14d]"></a>smtc_hal_mcu_spi_stm32l4_is_real_inst</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, smtc_hal_mcu_spi_stm32l4.o(i.smtc_hal_mcu_spi_stm32l4_is_real_inst))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_rw_buffer
</UL>

<P><STRONG><a name="[c8]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c7]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[cb]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ca]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[79]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
